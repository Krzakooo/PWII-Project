{% extends "base.twig" %}
{% block title %}Forum{% endblock %}
        
{% block content %}
{% include 'menu.twig' %}
<div class="centered-container">
    <h1>Discussion Forums</h1>

    <ul id="forumList">
        {% for forum in forums %}
            <li>
                <strong>{{ forum.title }}</strong>
                <p>{{ forum.description }}</p>
                <form class="form" id="deleteForm-{{ forum.id }}" method="post" action="/api/forums/{{ forum.id }}"
                      style="display: none;">
                    <input type="hidden" name="_method" value="DELETE">
                    <button type="submit" id="deleteBtn-{{ forum.id }}">Confirm Delete</button>
                </form>
                <a href="#" class="delete-btn custom-btn" data-forum-id="{{ forum.id }}">Delete</a>
                <form class="form" id="forumPostForm-{{ forum.id }}" method="get" action="forums/{{ forum.id }}/posts" style="display: none;">
                    <input type="hidden" name="_method" value="GET">
                    <button type="submit" id="forumBtn-{{ forum.id }}">Confirm Forum</button>
                </form>
                <a href="/forums/{{ forum.id }}/posts" class="custom-btn" data-forum-id="{{ forum.id }}">Go to Forum Posts</a>
            </li>
        {% endfor %}
    </ul>

    <!-- Create Forum Button -->
    <button class="custom-btn" id="openCreateFormBtn">Create Forum</button>

    <!-- Create Forum Modal -->
    <div id="createFormModal" class="modal">
        <div class="modal-content">
            <span class="close">&times;</span>
            <h2>Create Forum</h2>
            <form class="form" id="createForm" method="post" action="/forums">
                <label for="title">Title:</label>
                <input type="text" id="title" name="title" required><br>
                <label for="description">Description:</label><br>
                <textarea id="description" name="description" required></textarea><br>
                <button type="submit">Create Forum</button>
            </form>
        </div>
    </div>
</div>

<script>
    // Get the <span> element that closes the modal
    const span = document.getElementsByClassName("close")[0];

    // Create new Forum
    document.getElementById('createForm').addEventListener('submit', function (event) {
        event.preventDefault();
        const formData = new FormData(this);

        fetch('/api/forums', {
            method: 'POST',
            body: formData
        })
            .then(response => {
                if (response.ok) {
                    return response.json();
                } else {
                    console.error('Failed to create forum:', response.statusText);
                    throw new Error('Failed to create forum');
                }
            })
            .then(data => {
                // Show the create forum form
                document.getElementById('createForm').style.display = 'block';

                // Add the new forum to the list
                const forumList = document.getElementById('forumList');
                const newForum = document.createElement('li');
                newForum.innerHTML = `<strong>${data.title}</strong> - ${data.description}`;
                forumList.appendChild(newForum);

                window.location.reload();
            })
            .then(response => {
              if (!response.ok) {
                if (response.status === 403) {
                  // Handle 403 Forbidden error
                  console.error('Forbidden: Access to this resource is forbidden.');
                  // Display an error message to the user
                  alert('403 Forbidden: Access to this resource is forbidden.');
                } else {
                  // Handle other errors
                  console.error('Error:', response.status);
                  // Display a generic error message to the user
                  alert('An error occurred: ' + response.status);
                }
              } else {
                // Handle successful response
                return response.json(); // or response.text(), etc.
              }
            })
            .then(data => {
              // Process the data from the server
              console.log('Data:', data);
            })
            .catch(error => {
              // Handle network errors or other exceptions
              console.error('Fetch error:', error);
              // Display an error message to the user
              alert('An error occurred: ' + error.message);
            });
    });

    // Delete Forum
    const deleteLinks = document.querySelectorAll('.delete-btn');
    deleteLinks.forEach(function (link) {
        link.addEventListener('click', function (event) {
            event.preventDefault();
            const forumId = this.getAttribute('data-forum-id');
            if (confirm("Are you sure you want to delete this forum?")) {
                fetch(`/api/forums/${forumId}`, {
                    method: 'DELETE'
                })
                    .then(response => {
                        if (response.ok) {
                            window.location.reload();
                        } else {
                            alert("Failed to delete forum.");
                        }
                    })
                    .catch(error => console.error('Error:', error));
            }
        });
    });
    // Get the modal
    const createFormModal = document.getElementById('createFormModal');

    // Get the button that opens the modal
    const openCreateFormBtn = document.getElementById('openCreateFormBtn');

    // Get the <span> element that closes the modal
    const closeCreateFormBtn = document.getElementsByClassName('close')[0];

    // When the user clicks the button, open the modal
    openCreateFormBtn.onclick = function () {
        createFormModal.style.display = "block";
    }

    // When the user clicks on <span> (x), close the modal
    closeCreateFormBtn.onclick = function () {
        createFormModal.style.display = "none";
    }

    // When the user clicks anywhere outside of the modal, close it
    window.onclick = function (event) {
        if (event.target === createFormModal) {
            createFormModal.style.display = "none";
        }
    }
</script>
{% endblock %}
