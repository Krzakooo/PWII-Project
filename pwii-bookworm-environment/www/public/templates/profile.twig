<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Profile</title>
    <style>
        /* Reset default browser styles */
        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
        }

        /* Body styles */
        body {
            font-family: Arial, sans-serif;
            background-color: #f0f0f0;
            color: #333;
            line-height: 1.6;
            padding: 20px;
        }

        /* Centered container */
        .centered-container {
            max-width: 800px;
            margin: 0 auto;
        }

        ul {
            list-style-type: none;
        }

        /* Header styles */
        h1 {
            margin-bottom: 20px;
            text-align: center;
        }

        /* Forum list styles */
        .forum-details {
            text-align: center;
        }

        .post-list ul {
            list-style-type: none;
            padding: 0;
        }

        .post-list li {
            background-color: #fff;
            border-radius: 5px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            padding: 20px;
            margin-bottom: 10px;
        }

        .post-list li p {
            margin: 0;
        }

        /* Form styles */
        form.form {
            background-color: #fff;
            border-radius: 5px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            padding: 20px;
            margin-top: 20px;
        }

        label {
            display: block;
            margin-bottom: 10px;
            font-weight: bold;
        }

        .custom-file-upload {
            font-weight: normal;
            display: inline;
        }

        input[type="text"],
        input[type="email"],
        textarea {
            width: calc(100% - 22px);
            padding: 10px;
            margin-bottom: 20px;
            border: 1px solid #ccc;
            border-radius: 5px;
            box-sizing: border-box;
        }

        .logo {
            font-size: 22px !important;
        }

        form.menuit {
            margin-bottom: 20px;
        }

        button[type="submit"] {
            text-align: left;
            background-color: #4CAF50;
            color: white;
            padding: 12px 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
            width: 200px;
            transition: color 0.3s ease;
        }

        button[type="submit"]:hover {
            background-color: #45a049;
        }

        a.menuit {
            text-decoration: none;
            display: block;
            transition: color 0.3s ease;
            background-color: #4CAF50;
            color: white !important;
            padding: 10px 20px;
            margin-bottom: 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
            width: 200px;
        }

        a.menuit:hover,
        a.menuit:focus {
            text-decoration: underline;
            background-color: #45a049;
        }

        a:visited {
            color: #555;
        }

        ul {
            list-style-type: none;
        }
    </style>
</head>
<body>
{% include 'menu.twig' %} <!-- Menu inclusion here -->
<div class="centered-container" id="user-id" data-user-id="{{ userId }}">
    <h1>User Profile</h1>
    {% if flashyMessages %}
        <h2 style="color: red;">{{ flashyMessages }}</h2>
    {% endif %}

    {% if errors %}
        <div style="color: red;">
            {% for error in errors %}
                <p>{{ error }}</p>
            {% endfor %}
        </div>
    {% else %}
        {% if post %}
            <div style="color: green;">Profile updated successfully!</div>
        {% endif %}
    {% endif %}

    {% if profilePicture %}
        <img id="profile-picture-display" src="data:image/png;base64,{{ profilePicture }}" alt="Profile Picture" style="max-width: 200px;">
    {% else %}
        <p id="no-profile-picture">No profile picture available</p>
    {% endif %}

    {% if currentUser %}
        <form id="profile_form" class="form" action="/profile" method="POST" enctype="multipart/form-data" data-cy="profile">
            <label for="email">Email:</label>
            <input type="email" id="email" name="email" value="{{ currentUser.getEmail() }}" data-cy="profile__email">

            <label for="username">Username:</label>
            <input type="text" id="username" name="username" value="{{ currentUser.getUsername() }}" data-cy="profile__username">

            <label id="picture_label" class="custom-file-upload" for="profile_picture">Upload a Profile Picture</label>
            <input type="file" id="profile_picture" name="profile_picture" accept="image/png, image/jpeg, image/gif, image/svg+xml" data-cy="profile__picture">
            <script>
                document.getElementById('profile_picture').addEventListener('change', function() {
                    const file = this.files[0];
                    if (file) {
                        const reader = new FileReader();
                        reader.onload = function(e) {
                            let img = document.getElementById('profile-picture-display');
                            if (!img) {
                                img = document.createElement('img');
                                img.id = 'profile-picture-display';
                                document.getElementById('picture_label').after(img);
                            }
                            img.src = e.target.result;
                            img.style.maxWidth = '200px';
                            document.getElementById('picture_label').innerText = "File uploaded successfully";
                            document.getElementById('picture_label').style.color = "green";
                            document.getElementById('no-profile-picture')?.remove();
                        };
                        reader.readAsDataURL(file);
                    } else {
                        document.getElementById('picture_label').innerText = "Upload a Profile Picture";
                        const img = document.getElementById('profile-picture-display');
                        if (img) {
                            img.remove();
                            const noProfilePictureText = document.createElement('p');
                            noProfilePictureText.id = 'no-profile-picture';
                            noProfilePictureText.innerText = 'No profile picture available';
                            document.getElementById('profile_form').insertBefore(noProfilePictureText, document.getElementById('profile_form').firstChild);
                        }
                    }
                });

                document.getElementById('profile_form').addEventListener('submit', function(e) {
                    e.preventDefault();

                    // Get input values
                    const email = document.getElementById('email').value;
                    const username = document.getElementById('username').value;
                    const profilePictureInput = document.getElementById('profile_picture');
                    let profilePicture = null;

                    // Check if a profile picture is uploaded
                    if (profilePictureInput.files.length > 0) {
                        const file = profilePictureInput.files[0];
                        const reader = new FileReader();
                        reader.onload = function(e) {
                            profilePicture = e.target.result; // Store base64-encoded image as string
                            updateUser(email, username, profilePicture);
                        };
                        reader.readAsDataURL(file);
                    } else {
                        // No profile picture uploaded
                        updateUser(email, username, profilePicture);
                    }
                });

                function updateUser(email, username, profilePicture) {
                    // Prepare data to send to server
                    const data = {
                        email: email,
                        username: username,
                        profilePicture: profilePicture
                    };

                    // Send data to server
                    fetch('/profile', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(data)
                    })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                // Update UI with new data if any
                                if (data.email) {
                                    document.getElementById('email').value = data.email;
                                }
                                if (data.username) {
                                    document.getElementById('username').value = data.username;
                                }
                                if (data.profilePicture) {
                                    let img = document.getElementById('profile-picture-display');
                                    if (!img) {
                                        img = document.createElement('img');
                                        img.id = 'profile-picture-display';
                                        document.getElementById('picture_label').after(img);
                                    }
                                    img.src = data.profilePicture;
                                    img.style.maxWidth = '200px';
                                    document.getElementById('no-profile-picture')?.remove();
                                }
                                alert('Profile updated successfully!');
                            } else {
                                alert('Failed to update profile: ' + data.errors.join(', '));
                            }
                        })
                        .catch(error => {
                            console.error('Error:', error);
                            alert('An error occurred while updating the profile. Please try again.');
                        });
                }

            </script>

            <input type="submit" value="Update Profile" data-cy="profile__btn">
        </form>
    {% else %}
        <p>User not found.</p>
    {% endif %}

    <a href="/forums" style="margin-top: 20px;">Go to Forums</a>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const userId = document.getElementById('user-id').getAttribute('data-user-id');
            console.log('Logged in user ID:', userId);
        });
    </script>

</div>
</body>
</html>
