<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Book Details</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f0f0f0;
            color: #333;
            padding: 20px;
        }

        .container {
            max-width: 800px;
            margin: 0 auto;
            background-color: #fff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        h1 {
            text-align: center;
            margin-bottom: 20px;
        }

        .book-details {
            margin-bottom: 40px;
        }

        .book-details div {
            padding: 10px;
            border-bottom: 1px solid #ddd;
        }

        .search-results {
            margin-top: 40px;
        }

        .search-results h2 {
            text-align: center;
            margin-bottom: 20px;
        }

        .search-results div {
            padding: 10px;
            border-bottom: 1px solid #ddd;
        }

        .search-results .category {
            font-weight: bold;
            margin-top: 20px;
        }

        .logo {
            font-size: 22px !important;
        }
        
        
        form.menuit {
            margin-bottom: 20px;
        }

        button[type="submit"] {
            text-align: left;
            background-color: #4CAF50;
            color: white;
            padding: 12px 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
            width: 200px;
            transition: color 0.3s ease;
        }

        button[type="submit"]:hover {
            background-color: #45a049;
        }

        a.menuit {
            text-decoration: none;
            display: block;
            transition: color 0.3s ease;
            background-color: #4CAF50;
            color: white !important;
            padding: 10px 20px;
            margin-bottom: 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
            width: 200px;
        }

        a.menuit:hover,
        a.menuit:focus {
            text-decoration: underline;
            background-color: #45a049;
        }

        a:visited {
            color: #555;
        }
        ul {
            list-style-type: none;
        }
    </style>
</head>
<body>
<div class="container">
    {% include 'menu.twig' %}
    <div class="book-details">
        {% if book %}
            <div>
                <h1>{{ book.title }}</h1>
                <div><strong>Author(s):</strong> {{ book.author|join(', ') }}</div>
                <div><strong>Description:</strong> {{ book.description }}</div>
                <div><strong>Number of Pages:</strong>
                    {% if book.pages > 0 %}
                        {{ book.pages }}
                    {% else %}
                        Not Specified
                    {% endif %}
                </div>
                <div><strong>Cover:</strong> <img src="{{ book.cover }}" alt="{{ book.title }} cover"></div>
            </div>

            <!-- Rating & Review Section -->
            <div class="rating-review-section">
                <div class="rating-section">
                    <h2>Rate This Book</h2>
                    <label for="rating"></label>
                    <select name="rating" id="rating">
                        <option value="1">1 Star</option>
                        <option value="2">2 Stars</option>
                        <option value="3">3 Stars</option>
                        <option value="4">4 Stars</option>
                        <option value="5">5 Stars</option>
                    </select>
                    <button onclick="submitRating()">Submit Rating</button>
                </div>
            <div class="review-section">
                <h2>Write a Review</h2>
                <label for="review"></label>
                <textarea name="review" id="review" cols="30" rows="5" placeholder="Write your review here"></textarea>
                <input type="hidden" id="bookId" value="{{ book.id }}">
                <input type="hidden" id="userId" value="{{ user.id }}">
                <button onclick="submitReview()">Submit Review</button>
            </div>

        </div>

            <!-- Ratings -->
            <div class="ratings" id="ratings">
                <h2>Ratings</h2>
                <ul>
                    {% for rating in ratings %}
                        <li>{{ rating.rating }} Stars</li>
                    {% endfor %}
                </ul>
            </div>

            <!-- Reviews -->
            <div class="reviews" id="reviews">
                <h2>Reviews</h2>
                <ul>
                    {% for review in reviews %}
                        <li>{{ review.review_text }}</li>
                    {% endfor %}
                </ul>
            </div>
        {% else %}
            <h1>Book Not Found</h1>
        {% endif %}
    </div>
</div>
<script>
    function fetchRatingsAndReviews() {
        fetch(`/catalogue/{{ book.id }}/ratings`)
            .then(response => response.json())
            .then(data => {
                const ratingsList = document.querySelector('#ratings');
                ratingsList.innerHTML = '';
                const ratingsHeader = document.createElement('h2');
                ratingsHeader.textContent = 'Ratings';
                ratingsList.appendChild(ratingsHeader);
                const ul = document.createElement('ul');
                data.forEach(rating => {
                    const listItem = document.createElement('li');
                    listItem.textContent = `${rating.rating} Stars`;
                    ul.appendChild(listItem);
                });
                ratingsList.appendChild(ul);
            })
            .catch(error => console.error('Error fetching ratings:', error));

        fetch(`/catalogue/{{ book.id }}/reviews`)
            .then(response => response.json())
            .then(data => {
                const reviewsList = document.querySelector('#reviews');
                reviewsList.innerHTML = '';
                const reviewsHeader = document.createElement('h2');
                reviewsHeader.textContent = 'Reviews';
                reviewsList.appendChild(reviewsHeader);
                const ul = document.createElement('ul');
                data.forEach(review => {
                    const listItem = document.createElement('li');
                    listItem.textContent = review.review_text;
                    ul.appendChild(listItem);
                });
                reviewsList.appendChild(ul);
            })
            .catch(error => console.error('Error fetching reviews:', error));
    }

    function submitRating() {
        const rating = document.getElementById('rating').value;

        fetch(`/catalogue/{{ book.id }}/rate`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ rating: rating })
        })
            .then(response => {
                if (response.ok) {
                    alert('Rating submitted successfully');
                    fetchRatingsAndReviews();
                } else {
                    alert('Failed to submit rating');
                }
            })
            .catch(error => {
                console.error('Error:', error);
            });
    }

    function submitReview() {
        const review = document.getElementById('review').value;
        const bookId = document.getElementById('bookId').value;
        const userId = document.getElementById('userId').value;

        console.log('Review to be submitted:', review, bookId, userId);

        fetch(`/catalogue/${bookId}/review`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                review: review,
                bookId: bookId,
                userId: userId
            })
        })
            .then(response => {
                if (response.ok) {
                    return response.json();
                } else {
                    console.error('Failed to submit review:', response.statusText);
                    throw new Error('Failed to submit review');
                }
            })
            .then(data => {
                alert('Review submitted successfully');
                fetchRatingsAndReviews();
            })
            .catch(error => {
                console.error('Error:', error);
                alert('An error occurred while submitting the review: ' + error.message);
            });
    }


    fetchRatingsAndReviews();
</script>
</body>
</html>